// <auto-generated />
using System;
using CourseWork.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourseWork.Migrations
{
    [DbContext(typeof(OrganisationContext))]
    partial class OrganisationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("CourseWork.Models.Department", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("CourseWork.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Deadline")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Duration")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("CourseWork.Models.Role", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Responsibility")
                        .HasColumnType("TEXT");

                    b.Property<int?>("StaffId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("StaffId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CourseWork.Models.Skill", b =>
                {
                    b.Property<int?>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Level")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("SkillId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("CourseWork.Models.Staff", b =>
                {
                    b.Property<int?>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("StaffId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("CourseWork.Models.StaffSkill", b =>
                {
                    b.Property<int?>("StaffSkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("SkillId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SkillId1")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StaffId")
                        .HasColumnType("INTEGER");

                    b.HasKey("StaffSkillId");

                    b.HasIndex("SkillId1");

                    b.HasIndex("StaffId");

                    b.ToTable("StaffSkills");
                });

            modelBuilder.Entity("CourseWork.Models.Project", b =>
                {
                    b.HasOne("CourseWork.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CourseWork.Models.Role", b =>
                {
                    b.HasOne("CourseWork.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("CourseWork.Models.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId");

                    b.Navigation("Project");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CourseWork.Models.Staff", b =>
                {
                    b.HasOne("CourseWork.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CourseWork.Models.StaffSkill", b =>
                {
                    b.HasOne("CourseWork.Models.Skill", "Skill")
                        .WithMany("staffSkills")
                        .HasForeignKey("SkillId1");

                    b.HasOne("CourseWork.Models.Staff", "Staff")
                        .WithMany("staffSkills")
                        .HasForeignKey("StaffId");

                    b.Navigation("Skill");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CourseWork.Models.Skill", b =>
                {
                    b.Navigation("staffSkills");
                });

            modelBuilder.Entity("CourseWork.Models.Staff", b =>
                {
                    b.Navigation("staffSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
